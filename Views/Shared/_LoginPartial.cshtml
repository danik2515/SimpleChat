
@using Microsoft.AspNetCore.Identity
@using WebApp.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        try {
            @if (UserManager.FindByNameAsync(UserManager.GetUserName(User)).Result.IsBlocked) {
                await SignInManager.SignOutAsync();
            }
        }catch{ await SignInManager.SignOutAsync(); }

        <li class="nav-item">
            
                
                <a type="submit" id="manage" class="nav-link text-dark" name="manage" asp-controller="Account" asp-action="Index" title="Manage">Account @UserManager.GetUserName(User)</a>
    </li
        
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-controller="Account" asp-action="Logout")">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
@if(!SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-controller="Account" asp-action="Register">Regiser</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-controller="Account" asp-action="Login">Login</a>
    </li>
}
</ul>
